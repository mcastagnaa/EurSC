{
    "contents" : "library(ggplot2)\nlibrary(reshape2)\nlibrary(plyr)\nlibrary(zoo)\nlibrary(PerformanceAnalytics)\nlibrary(scales)\nlibrary(quantmod)\nlibrary(Hmisc)\n\n#Data management\n\nrm(list =ls(all=TRUE))\nRawData <- read.csv(\"RawData.csv\", header=TRUE)\nRawData$Date <- as.Date(RawData$Date, format=\"%d/%m/%Y\")\nn <-nrow(RawData)\nhead(RawData)\nrownames(RawData) <- RawData$Date\n\n#DOESN'T WORK periodReturn(as.ts(RawData[, 2:3]), period='monhtly')\n\n# there must be something better than this!\nRawData$IGNISret <- c(NA,RawData$IGNIS[2:n]/RawData$IGNIS[1:n-1]-1)\nRawData$GARTPret <- c(NA,RawData$GARTPAN[2:n]/RawData$GARTPAN[1:n-1]-1)\nRawData$JCSCEXPTret <- c(NA,RawData$JCSCEXPT[2:n]/RawData$JCSCEXPT[1:n-1]-1)\n\nRawData$IGNISrr <- RawData$IGNISret - RawData$JCSCEXPTret\nRawData$GARTPRrr <- RawData$GARTPret - RawData$JCSCEXPTret\n\nhead(RawData)\n\n# relative returns data frame\nRawData.rret <- subset(RawData, select=c(IGNISrr, \n                                         GARTPRrr))\n\nrownames(RawData.rret) <- RawData$Date\n\n# absolute returns data frame\nRawData.r <- subset(RawData, select=c(IGNISret, \n                                      GARTPret,\n                                      JCSCEXPTret))\nRawData.r$Rf <- rep(0,nrow(RawData.r))\nrownames(RawData.r) <- RawData$Date\n\n# rolling standard deviation\nRollingObs <- 54\nRollSd <- data.frame(cbind(RawData$Date, \n                           rollapplyr(RawData[c(\"IGNISret\", \n                                                \"GARTPret\",\n                                                \"JCSCEXPTret\")], \n                                      RollingObs, sd, fill=NA)))\ncolnames(RollSd)[1] <- \"Date\"\n\nRollSd$Date <- as.Date(RollSd$Date)\nhead(RollSd)\n\n# charts\nchart.Correlation(RawData.rret, histogram = TRUE)\n\nchart.CumReturns(RawData.rret,\n                 wealth.index = TRUE,\n                 legend.loc = \"topleft\",\n                 begin = \"first\",\n                 main=\"Value of $1\",\n                 ylab = \"'alpha' returns\",\n                 xlab = NULL, \n                 date.format = \"%b/%y\")\n\n\nchart.CumReturns(RawData.r,\n                 wealth.index = TRUE,\n                 legend.loc = \"topleft\",\n                 begin = \"first\",\n                 main=\"Value of $1\",\n                 ylab = \"absolute returns\",\n                 xlab = NULL, \n                 date.format = \"%b/%y\")\n\n\nmeltdf<-melt(RollSd,id=\"Date\")\n\nggplot(na.omit(meltdf), \n      aes(x=Date, y=value, colour=variable, group=variable, size = variable, linetype = variable)) +\n      geom_line() + \n      ylab(paste0(\"Rolling sd (\", toString(RollingObs), \"obs)\")) +   \n      scale_linetype_manual(values= c(rep(\"solid\",7), \"dotted\")) +\n      scale_size_manual(values= c(1, 1, 0.5)) + \n      theme(legend.position=\"bottom\") + \n      scale_colour_brewer(palette=\"Set1\")\n\n\n# extra charts\ncharts.PerformanceSummary(RawData.rret)\n\nchart.Boxplot(RawData.rret, sort.by = \"variance\")\n\nchart.RiskReturnScatter(RawData.rret, \n                        add.boxplot = TRUE, \n                        sharpe.ratio = NULL)\n\nchart.RollingPerformance(RawData.rret,\n                         legend.loc = \"topright\",\n                         begin = \"first\",\n                         main=\"rolling 12-weeks performance\",\n                         ylab = \"'alpha' returns\",\n                         xlab = NULL, \n                         date.format = \"%b/%y\")\n\n# tables\nt(table.CalendarReturns(RawData.rret))\n\nresult <- t(table.Stats(RawData.rret[, , drop = F]))\ntextplot(format.df(result, na.blank=TRUE, numeric.dollar=FALSE, cdec=c(rep(1,2),rep(3,14))),\n         rmar = 0.8, cmar = 1.5,  max.cex=.9, halign = \"center\", valign = \"top\",\n         row.valign=\"center\", wrap.rownames=10, wrap.colnames=10, mar = c(0,0,3,0)+0.1)\n        title(main=\"Statistics for relative returns\")\n\ntable.DownsideRisk(RawData.r[,1:2, drop=F], Rf = RawData.r[,3, drop=F])\n\ntable.Drawdowns(RawData.r[,1, drop=F])\n",
    "created" : 1427130792640.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2565819361",
    "id" : "8266F884",
    "lastKnownWriteTime" : 1431330172,
    "path" : "G:/GitHub/EurSC/ScriptWithJustIGNIS_GART.R",
    "project_path" : "ScriptWithJustIGNIS_GART.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}